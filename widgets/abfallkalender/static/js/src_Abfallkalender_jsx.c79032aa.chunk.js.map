{"version":3,"file":"static/js/src_Abfallkalender_jsx.c79032aa.chunk.js","mappings":"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","sources":["Abfallkalender.jsx"],"sourcesContent":["import React from 'react';\nimport i18next from 'i18next';\nimport { i18n as I18n } from '@iobroker/adapter-react-v5';\nimport CardContent from '@mui/material/CardContent';\nimport Checkbox from '@mui/material/Checkbox';\nimport Card from '@mui/material/Card';\nimport FormControl from '@mui/material/FormControl';\nimport Input from '@mui/material/Input';\nimport MenuItem from '@mui/material/MenuItem';\nimport Select from '@mui/material/Select';\nimport { withStyles,withTheme } from '@mui/styles';\nimport { VisRxWidget } from '@iobroker/vis-2-widgets-react-dev';\nimport { ReactComponent as TrashIcon } from './img/AbfallIconMitText.svg';\nimport translations from './translations-i18next';\n\nconst styles = () => ({\n    root: {\n        flex: 1,\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        width: '100%',\n        overflow: 'hidden',\n    },\n});\n\nclass Abfallkalender extends (window.visRxWidget || VisRxWidget) {\n    constructor(props) {\n        super(props);\n        this.refTrashIcon = React.createRef();\n        this.initial = true;\n        this.instancenameLocal = '';\n        this.wastetypeLocal = '';\n        this.JsonObject = {};\n        this.oidChange = false;\n    }\n\n    static getWidgetInfo() {\n        // more details for custom filters in file:\n        // vis-2-beta/static/js/Attributes/Widget/WidgetField.jsx (line 424ff)\n        //\n        // new fields are not added to existing widgets !!!\n        return {\n            id: 'tplAbfallkalender',\n            visSet: 'abfallkalender',\n            visSetLabel: 'vis_2_widgets_abfallkalender', // Widget set translated label (should be defined only in one widget of set)\n            visSetColor: '#63C149',                // Color of widget set. it is enough to set color only in one widget of set\n            visName: I18n.t('vis_2_widgets_abfallkalender_widgetname_icon'), // Name of widget\n            visAttrs: [\n                {\n                    name: 'common', // group name\n                    label: 'vis_2_widgets_abfallkalender_common', // translated group label\n                    fields: [\n                        {\n                            name: 'instancename',\n                            label: 'vis_2_widgets_abfallkalender_instance',\n                            type: 'custom',\n                            hidden: 'data.instancenamehidden === \"true\"',\n                            component: (\n                                field,\n                                data,\n                                onDataChange,\n                            ) => this.showInstances(field,data,onDataChange),\n                        },\n                        {\n                            name: 'instancenamehidden',  // hide instance selection if only one instance exists\n                            type: 'text',\n                            hidden: true,\n                            default: 'false',\n                        },\n                        {\n                            name: 'selectinstances',     // hidden value of the select entries for instances\n                            label: 'selectinstances',\n                            type: 'text',\n                            hidden: true,\n                            default: '',\n                        },\n                        {\n                            name: 'wastetype',\n                            label: 'vis_2_widgets_abfallkalender_wastetype',\n                            type: 'custom',\n                            disabled: 'data.wastetypedisabled === \"true\"',\n                            component: (\n                                field,\n                                data,\n                                onDataChange,\n                            ) => this.showWasteTypes(field,data,onDataChange),\n                        },\n                        {\n                            name: 'wastetypedisabled',     // hide waste type selection if only one waste type is activated\n                            type: 'text',\n                            hidden: true,\n                            default: 'false',\n                        },\n                        {\n                            name: 'selectwastetypes',     // hidden value of the select entries for waste types\n                            label: 'selectwastetypes',\n                            type: 'text',\n                            hidden: true,\n                            default: '',\n                        },\n                        {\n                            name: 'icon',\n                            default: 'trash',\n                            label: 'vis_2_widgets_abfallkalender_icon',\n                            type: 'select',\n                            options: [\n                                {\n                                    value: 'trash',\n                                    label: 'vis_2_widgets_abfallkalender_icontrash',\n                                },\n                                {\n                                    value: 'yellowbag',\n                                    label: 'vis_2_widgets_abfallkalender_iconyellowbag',\n                                },\n                                {\n                                    value: 'christmastree',\n                                    label: 'vis_2_widgets_abfallkalender_iconchristmastree',\n                                },\n                                {\n                                    value: 'leaf',\n                                    label: 'vis_2_widgets_abfallkalender_iconleaf',\n                                },\n                            ],\n                        },\n                        {\n                            name: 'trashcolor',\n                            default: 'rgba(40,30,88,1)',\n                            label: 'vis_2_widgets_abfallkalender_trashcolor',\n                            type: 'color',\n                            hidden: 'data.icon !== \"trash\"',\n                        },\n                        {\n                            name: 'trashcolorfactor',\n                            hidden: 'data.icon !== \"trash\"',\n                            default: -0.3,\n                            label: 'vis_2_widgets_abfallkalender_trashcolor_factor',\n                            type: 'slider',\n                            min: -1,\n                            max: 1,\n                            step: 0.1,\n                        },\n                        {\n                            name: 'whatsapplogo',\n                            default: true,\n                            label: 'vis_2_widgets_abfallkalender_whatsapplogo',\n                            type: 'custom',\n                            hidden: 'data.whatsapplogohidden === \"true\"',\n                            component: (\n                                field,\n                                data,\n                                onDataChange,\n                            ) => this.showCheckbox(field,data,onDataChange),\n                        },\n                        {\n                            name: 'whatsapplogohidden',     // hide whatsapp selection if whatsapp is not activated for the selected waste\n                            type: 'text',\n                            hidden: true,\n                            default: 'false',\n                        },\n                        {\n                            name: 'blink',\n                            default: true,\n                            label: 'vis_2_widgets_abfallkalender_blink',\n                            type: 'custom',\n                            hidden: 'data.blinkhidden === \"true\"',\n                            component: (\n                                field,\n                                data,\n                                onDataChange,\n                            ) => this.showCheckbox(field,data,onDataChange),\n                        },\n                        {\n                            name: 'blinkhidden',     // hide blink checkbox if blink is not activated for the selected waste\n                            type: 'text',\n                            hidden: true,\n                            default: 'false',\n                        },\n                        {\n                            name: 'blinkinterval',\n                            default: 3,\n                            label: 'vis_2_widgets_abfallkalender_blinkinterval',\n                            type: 'slider',\n                            hidden: 'data.blink === false || data.blinkhidden === \"true\"',\n                            min: 1,\n                            max: 15,\n                            step: 1,\n                        },\n                        {\n                            name: 'showdate',\n                            default: true,\n                            label: 'vis_2_widgets_abfallkalender_showdate',\n                            type: 'custom',\n                            component: (\n                                field,\n                                data,\n                                onDataChange,\n                            ) => this.showCheckbox(field,data,onDataChange),\n                        },\n                        {\n                            name: 'dateformat',\n                            default: 'short',\n                            label: 'vis_2_widgets_abfallkalender_dateformat',\n                            type: 'select',\n                            hidden: 'data.showdate === false',\n                            options: [\n                                {\n                                    value: 'short',\n                                    label: 'vis_2_widgets_abfallkalender_dateformat_short',\n                                },\n                                {\n                                    value: 'long',\n                                    label: 'vis_2_widgets_abfallkalender_dateformat_long',\n                                },\n                            ],\n                        },\n                        {\n                            name: 'showdays',\n                            default: true,\n                            label: 'vis_2_widgets_abfallkalender_showdays',\n                            type: 'custom',\n                            component: (\n                                field,\n                                data,\n                                onDataChange,\n                            ) => this.showCheckbox(field,data,onDataChange),\n                        },\n                        {\n                            name: 'fontfamily',\n                            label: 'vis_2_widgets_abfallkalender_fontfamily',\n                            default: 'Arial',\n                            type: 'custom',\n                            hidden: 'data.showdate === false && data.showdays === false',\n                            component: (\n                                field,\n                                data,\n                                onDataChange,\n                            ) => this.showFontfamily(field,data,onDataChange),\n                        },\n                        {\n                            name: 'fontsize',\n                            default: 20,\n                            label: 'vis_2_widgets_abfallkalender_fontsize',\n                            type: 'slider',\n                            hidden: 'data.showdate === false && data.showdays === false',\n                            min: 6,\n                            max: 45,\n                            step: 1,\n                        },\n                        {\n                            name: 'oid',     // name in data structure\n                            label: 'vis_2_widgets_abfallkalender_oid',\n                            type: 'id',\n                            noInit: true,\n                            hidden: true,\n                        },\n                    ],\n                },\n                // check here all possible types https://github.com/ioBroker/ioBroker.vis/blob/react/src/src/Attributes/Widget/SCHEMA.md\n            ],\n            visPrev: 'widgets/abfallkalender/img/abfallkalender.png',\n        };\n    }\n\n    changeData(newData) {\n        const { id,view,views,selectedWidgets } = this.props;\n        const changeWidgets = selectedWidgets !== null ? selectedWidgets : [id];\n        changeWidgets.forEach(widgetId => {\n            Object.keys(newData)\n                .forEach(attr => {\n                    views[view].widgets[widgetId].data[attr] = newData[attr];\n                    this.state.data[attr] = newData[attr];\n                    this.state.rxData[attr] = newData[attr];\n                });\n        });\n    }\n\n    // eslint-disable-next-line class-methods-use-this\n    async propertiesUpdate() {\n        // Widget has 3 important states\n        // 1. this.state.values - contains all state values, that are used in widget (automatically collected from widget info).\n        //                        So you can use `this.state.values[this.state.rxData.oid + '.val']` to get value of state with id this.state.rxData.oid\n        // 2. this.state.rxData - contains all widget data with replaced bindings. E.g. if this.state.data.type is `{system.adapter.admin.0.alive}`,\n        //                        then this.state.rxData.type will have state value of `system.adapter.admin.0.alive`\n        // 3. this.state.rxStyle - contains all widget styles with replaced bindings. E.g. if this.state.styles.width is `{javascript.0.width}px`,\n        //                        then this.state.rxData.type will have state value of `javascript.0.width` + 'px\n        if (this.initial === true && this.oidChange !== true) {\n            return;\n        }\n        const { wastetype,instancename } = this.state.data;\n        let renderIcon = true;\n        if (typeof instancename !== 'undefined' && this.instancenameLocal !== instancename) {\n            this.instancenameLocal = instancename;\n            await this.getWasteTypes(instancename);\n            renderIcon = false;\n        }\n        if (this.oidChange === true || (\n            typeof wastetype !== 'undefined' && this.wastetypeLocal !== wastetype)) {\n            this.wastetypeLocal = wastetype;\n            await this.getJsonObject(wastetype,this.instancenameLocal);\n            await this.updateWhatsappAndBlink();\n            renderIcon = true;\n            if (this.oidChange === true) { this.oidChange = false; }\n        }\n        if (renderIcon === true) {\n            await this.renderIcon();\n        }\n    }\n\n    componentDidMount() {\n        super.componentDidMount();\n        // Update data\n        i18next.init(translations)\n            .then(() => {\n                i18next.changeLanguage(this.props.systemConfig.common.language);\n            });\n        this.getInstances()\n            .then(instance => {\n                this.getWasteTypes(instance)\n                    .then(retwastetype => {\n                        this.getJsonObject(retwastetype,instance)\n                            .then(() => {\n                                this.updateWhatsappAndBlink()\n                                    .then(() => {\n                                        this.renderIcon()\n                                            .then(() => {\n                                                this.initial = false;\n                                            });\n                                    });\n                            });\n                    });\n            });\n    }\n\n    // Do not delete this method. It is used by vis to read the widget configuration.\n    // eslint-disable-next-line class-methods-use-this\n    getWidgetInfo() {\n        return Abfallkalender.getWidgetInfo();\n    }\n\n    // This function is called every time when rxData is changed\n    onRxDataChanged() {\n        this.propertiesUpdate();\n    }\n\n    // This function is called every time when rxStyle is changed\n    // eslint-disable-next-line class-methods-use-this\n    onRxStyleChanged() {\n    }\n\n    // This function is called every time when some Object State updated, but all changes lands into this.state.values too\n    // eslint-disable-next-line class-methods-use-this, no-unused-vars\n    onStateUpdated(id,state) {\n        // state of the object 'CalenderDoubleQuotes' has changed\n        this.oidChange = true;\n        this.propertiesUpdate();\n    }\n\n    async renderIcon() {\n        const { trashcolor,trashcolorfactor,fontfamily,fontsize,whatsapplogo,dateformat,blink,blinkinterval,showdate,showdays } = this.state.data;\n        this.refTrashIcon.current.childNodes.forEach(element => {\n            if (element.id === 'Abfalltonne') {\n                // show or hide the dustbin\n                element.attributes.style.value = `visibility: ${this.state.data.icon === 'trash' ? 'visible' : 'hidden'};`;\n                let trashColorOuter = '';\n                element.childNodes.forEach(child => {\n                    if (child.id === 'tonne') {\n                        // color of the dustbin\n                        if (trashcolor === '') {\n                            this.state.data.trashcolor = child.attributes.fill.nodeValue;\n                            trashColorOuter = child.attributes.fill.nodeValue;\n                        } else {\n                            child.attributes.fill.nodeValue = this.state.data.trashcolor;\n                            trashColorOuter = this.state.data.trashcolor;\n                        }\n                    }\n                    if (child.id === 'tonne-innen' && typeof trashColorOuter !== 'undefined') {\n                        // inner color of the dustbin\n                        const colors = trashColorOuter.replace('rgba(','').replace(')','').split(',');\n                        const factor = 1 + trashcolorfactor;\n                        const color0 = Math.round(parseInt(colors[0]) * factor);\n                        const color1 = Math.round(parseInt(colors[1]) * factor);\n                        const color2 = Math.round(parseInt(colors[2]) * factor);\n                        const newColor = `rgba(${color0},${color1},${color2},1)`;\n                        child.attributes.fill.nodeValue = newColor;\n                    }\n                });\n            }\n            if (element.id === 'GelberSack') {\n                // show or hide the yellow bag\n                element.attributes.style.value = `visibility: ${this.state.data.icon === 'yellowbag' ? 'visible' : 'hidden'};`;\n            }\n            if (element.id === 'Blatt') {\n                // show or hide the yellow bag\n                element.attributes.style.value = `visibility: ${this.state.data.icon === 'leaf' ? 'visible' : 'hidden'};`;\n            }\n            if (element.id === 'Weihnachtsbaum') {\n                // show or hide the yellow bag\n                element.attributes.style.value = `visibility: ${this.state.data.icon === 'christmastree' ? 'visible' : 'hidden'};`;\n            }\n            if (element.id === 'whatsapp') {\n                // show or hide the Whatsapp logo\n                element.attributes.style.value = `visibility: ${whatsapplogo === true ? 'visible' : 'hidden'};`;\n            }\n            if (element.id.indexOf('Abfuhrdatum') !== -1) {\n                const options = { year: '2-digit',month: '2-digit',day: '2-digit' };\n                if (dateformat === 'long') {\n                    options.weekday = 'long';\n                }\n                element.innerHTML = new Date(this.JsonObject.AbfuhrtagJson).toLocaleDateString(this.props.lang,options);\n                element.style.fontSize = `${fontsize}px`;\n                element.style.fontFamily = fontfamily;\n                element.style.visibility = showdate === true ? 'visible' : 'hidden';\n                /* \"Abfuhrdatum\": \"08.04.2023\",\n                    \"AbfuhrTagLang\": \"Samstag\",\n                    \"AbfuhrTagKurz\": \"Sa\",\n                    \"Abfuhrart\": \"Restmüll wöchentlich\"\n                    \"Resttage\": 3\n                */\n            }\n            if (element.id.indexOf('AnzahlTage') !== -1) {\n                element.innerHTML = i18next.t('vis_2_widgets_abfallkalender_dayCollection',{ count: this.JsonObject.Resttage });\n                element.style.fontSize = fontsize;\n                element.style.fontFamily = fontfamily;\n                element.style.visibility = showdays === true ? 'visible' : 'hidden';\n            }\n        });\n        if (blink === true && this.JsonObject.Blinken === true) {\n            const blinking = [\n                { opacity: 0 },\n                { opacity: 1 },\n            ];\n            const timing = {\n                duration: blinkinterval * 1000,\n                iterations: Infinity,\n            };\n            this.refTrashIcon.current.animate(\n                blinking,\n                timing,\n            );\n        } else {\n            this.refTrashIcon.current.getAnimations().map(animation => animation.cancel());\n        }\n    }\n\n    async getJsonObject(selwastetype,instance) {\n        const id = `abfallkalender.${instance}.CalendarDoubleQuotes`;\n        if (selwastetype === '') { return; }\n        await this.props.socket.getForeignStates(id)\n            .then(status => {\n                if (!(id in status)) { return; }\n                const getJsonObject  = JSON.parse(status[id].val).filter(element => element.AbfuhrartNr === selwastetype);\n                this.JsonObject =  typeof getJsonObject[0] !== 'undefined' ? getJsonObject[0] : {};\n                // this.changeData({ oid: `\"${id}\"` });\n                this.changeData({ oid: id });\n            });\n    }\n\n    async updateWhatsappAndBlink() {\n        const wastetypes = (('selectwastetypes' in this.state.data) && this.state.data.selectwastetypes !== '') ? this.state.data.selectwastetypes.replaceAll('[','{').replaceAll(']','}').replaceAll('#','\"').split('}')\n            .slice(0,-1) : [];\n        for (let i = 0; i < wastetypes.length; i++) {\n            wastetypes[i] += '}';\n            wastetypes[i] = JSON.parse(wastetypes[i].replaceAll(/'/g,'\"'));\n        }\n        const filtered = wastetypes.filter(wastetype => wastetype.value === this.state.data.wastetype);\n        const whatsappUsed = filtered.length > 0 ? parseInt(filtered[0].whatsapp) > -1 : false;\n        if (this.state.editMode === true) {\n            this.changeData({ whatsapplogohidden: whatsappUsed === true ? 'false' : 'true' });\n        }\n        if (whatsappUsed === false) {\n            this.changeData({ whatsapplogo: false });\n        }\n        const blinkUsed = filtered.length > 0 ? parseInt(filtered[0].blink) > -1 : false;\n        if (this.state.editMode === true) {\n            this.changeData({ blinkhidden: blinkUsed === true ? 'false' : 'true' });\n        }\n        if (blinkUsed === false) {\n            this.changeData({ blink: false });\n        }\n    }\n\n    async getInstances() {\n        let ret = this.state.data.instancename;\n        const instances = await this.props.socket.getObjectViewSystem('instance','system.adapter.abfallkalender.','system.adapter.abfallkalender.\\u9999')\n            .then(rows => {\n                const newinstances = [];\n                Object.keys(rows).forEach((key,i) => {\n                    newinstances.push({ value: i,title: rows[key]._id.replace('system.adapter.','') });\n                });\n                return newinstances;\n            })\n            .catch(error => {\n                console.log('ERROR !!!:');\n                console.log(error);\n                return [];\n            });\n        if (this.state.editMode === true) {\n            await this.arr2string(instances)\n                .then(strinstances => {\n                    this.changeData({ selectinstances: strinstances });\n                });\n            this.changeData({ instancenamehidden: instances.length < 2 ? 'true' : 'false' });\n        }\n        if (this.initial === true && (!('instancename' in this.state.data) || this.state.data.instancename === '')) {\n            ret = instances.length > 0  ? instances[0].value : '';\n            this.changeData({ instancename: ret });\n        }\n        this.instancenameLocal = ret;\n        return ret;\n    }\n\n    static showInstances(field,data,onDataChange) {\n        const menuitems = (('selectinstances' in data) && data.selectinstances !== '') ? data.selectinstances.replaceAll('[','{').replaceAll(']','}').replaceAll('#','\"').split('}')\n            .slice(0,-1) : [];\n        for (let i = 0; i < menuitems.length; i++) {\n            menuitems[i] += '}';\n            menuitems[i] = JSON.parse(menuitems[i].replaceAll(/'/g,'\"'));\n        }\n        return data.selectinstances === '' ? <div></div> : <FormControl>\n            <Select\n                value={data[field.name]}\n                onChange={event => {\n                    onDataChange({ [field.name]: event.target.value });\n                }}\n                input={<Input name=\"instances\" />}\n                label={i18next.t('vis_2_widgets_abfallkalender_instance')}\n                style={{ fontSize: '12.8px' }}\n            >\n                {menuitems.map(item => (\n                    <MenuItem key={item.value} value={item.value} style={{ fontSize: '16px' }}>\n                        {item.title}\n                    </MenuItem>\n                ))}\n            </Select>\n        </FormControl>;\n    }\n\n    static showFontfamily(field,data,onDataChange) {\n        const fontCheck = new Set([\n            // Windows 10\n            'Arial','Arial Black','Bahnschrift','Calibri','Cambria','Cambria Math','Candara','Comic Sans MS','Consolas','Constantia','Corbel','Courier New','Ebrima','Franklin Gothic Medium','Gabriola','Gadugi','Georgia','HoloLens MDL2 Assets','Impact','Ink Free','Javanese Text','Leelawadee UI','Lucida Console','Lucida Sans Unicode','Malgun Gothic','Marlett','Microsoft Himalaya','Microsoft JhengHei','Microsoft New Tai Lue','Microsoft PhagsPa','Microsoft Sans Serif','Microsoft Tai Le','Microsoft YaHei','Microsoft Yi Baiti','MingLiU-ExtB','Mongolian Baiti','MS Gothic','MV Boli','Myanmar Text','Nirmala UI','Palatino Linotype','Segoe MDL2 Assets','Segoe Print','Segoe Script','Segoe UI','Segoe UI Historic','Segoe UI Emoji','Segoe UI Symbol','SimSun','Sitka','Sylfaen','Symbol','Tahoma','Times New Roman','Trebuchet MS','Verdana','Webdings','Wingdings','Yu Gothic',\n            // macOS\n            'American Typewriter','Andale Mono','Arial','Arial Black','Arial Narrow','Arial Rounded MT Bold','Arial Unicode MS','Avenir','Avenir Next','Avenir Next Condensed','Baskerville','Big Caslon','Bodoni 72','Bodoni 72 Oldstyle','Bodoni 72 Smallcaps','Bradley Hand','Brush Script MT','Chalkboard','Chalkboard SE','Chalkduster','Charter','Cochin','Comic Sans MS','Copperplate','Courier','Courier New','Didot','DIN Alternate','DIN Condensed','Futura','Geneva','Georgia','Gill Sans','Helvetica','Helvetica Neue','Herculanum','Hoefler Text','Impact','Lucida Grande','Luminari','Marker Felt','Menlo','Microsoft Sans Serif','Monaco','Noteworthy','Optima','Palatino','Papyrus','Phosphate','Rockwell','Savoye LET','SignPainter','Skia','Snell Roundhand','Tahoma','Times','Times New Roman','Trattatello','Trebuchet MS','Verdana','Zapfino',\n        ].sort());\n        document.fonts.ready;\n        const fontAvailable = new Set();\n        for (const font of fontCheck.values()) {\n            if (document.fonts.check(`${data.fontsize}px \"${font}\"`)) {\n                fontAvailable.add(font);\n            }\n        }\n        const menuitems = [];\n        for (const font of fontAvailable) {\n            menuitems.push({ title: font,value: font });\n        }\n        return <FormControl>\n            <Select\n                value={data[field.name]}\n                onChange={event => {\n                    onDataChange({ [field.name]: event.target.value });\n                }}\n                input={<Input name=\"fontfamily\" />}\n                label={i18next.t('vis_2_widgets_abfallkalender_fontfamily')}\n                style={{ fontSize: '12.8px' }}\n            >\n                {menuitems.map(item => (\n                    <MenuItem key={item.value} value={item.value} style={{ fontSize: '16px' }}>\n                        {item.title}\n                    </MenuItem>\n                ))}\n            </Select>\n        </FormControl>;\n    }\n\n    static showWasteTypes(field,data,onDataChange) {\n        const menuitems = (('selectwastetypes' in data) && data.selectwastetypes !== '') ? data.selectwastetypes.replaceAll('[','{').replaceAll(']','}').replaceAll('#','\"').split('}')\n            .slice(0,-1) : [];\n        for (let i = 0; i < menuitems.length; i++) {\n            menuitems[i] += '}';\n            menuitems[i] = JSON.parse(menuitems[i].replaceAll(/'/g,'\"'));\n        }\n        return data.selectwastetypes === '' ? <div></div> : <FormControl>\n            <Select\n                value={data[field.name]}\n                onChange={event => {\n                    onDataChange({ [field.name]: event.target.value });\n                }}\n                input={<Input name=\"wastetypes\" />}\n                label={i18next.t('vis_2_widgets_abfallkalender_wastetype')}\n                style={{ fontSize: '12.8px' }}\n            >\n                {menuitems.map(item => (\n                    <MenuItem key={item.value} value={item.value} style={{ fontSize: '16px' }}>\n                        {item.title}\n                    </MenuItem>\n                ))}\n            </Select>\n        </FormControl>;\n    }\n\n    static showCheckbox(field,data,onDataChange) {\n        return <FormControl>\n            <Checkbox\n                checked={data[field.name]}\n                onChange={event => {\n                    onDataChange({ [field.name]: event.target.checked });\n                }}\n                color=\"primary\"\n            />\n        </FormControl>;\n    }\n\n    async getWasteTypes(instance) {\n        if (instance === '') { return ''; }\n        let ret = this.state.data.wastetype;\n        const wasteTypes = await this.props.socket.getObjectViewSystem('instance','system.adapter.abfallkalender.','system.adapter.abfallkalender.\\u9999')\n            .then(rows => {\n                const allWasteTypes = [];\n                Object.keys(rows).forEach(key => {\n                    if (Object.keys(rows).length === 1 || rows[key]._id === `system.adapter.${instance}`) {\n                        for (let k = 0; k < rows[key].native.wasteTypes.length; k++) {\n                            if (rows[key].native.wasteTypes[k].used === true) {\n                                allWasteTypes.push({ value: rows[key].native.wasteTypes[k].value,title: rows[key].native.wasteTypes[k].title,whatsapp: rows[key].native.wasteTypes[k].whatsapp,blink: rows[key].native.wasteTypes[k].blink });\n                            }\n                        }\n                    }\n                });\n                return allWasteTypes;\n            })\n            .catch(error => {\n                console.log('ERROR !!!:');\n                console.log(error);\n                return [];\n            });\n        if (this.state.editMode) {\n            await this.arr2string(wasteTypes)\n                .then(strwastetypes => {\n                    this.changeData({ selectwastetypes: strwastetypes });\n                });\n            this.changeData({ wastetypedisabled: wasteTypes.length < 2 ? 'true' : 'false' });\n        }\n        if (this.initial === true && (!('wastetype' in this.state.data) || this.state.data.wastetype === '')) {\n            ret = wasteTypes.length > 0 ? wasteTypes[0].value : '';\n            this.changeData({ wastetype: ret });\n        }\n        this.wastetypeLocal = ret;\n        return ret;\n    }\n\n    // eslint-disable-next-line class-methods-use-this\n    async arr2string(arr) {\n        let str = '';\n        // eslint-disable-next-line array-callback-return\n        arr.map(arrelement => {\n            str += '[';\n            Object.keys(arrelement)\n                .forEach((attr,index) => {\n                    if (index > 0) str += ',';\n                    str += `#${attr}#: #${arrelement[attr].toString()}#`;\n                });\n            str += ']';\n        });\n        return str;\n    }\n\n    renderWidgetBody(props) {\n        // eslint-disable-next-line prefer-template\n        super.renderWidgetBody(props);\n        return <Card class={`\"card-trash${props.id}\"`} style={{ width: '100%',height: '100%' }}>\n            <CardContent style={{ width: '100%',height: '100%',display: 'flex',justifyContent:'center',alignItems: 'center' }}>\n                <TrashIcon class={`\"trashicon${props.id}\"`} ref={this.refTrashIcon} />\n            </CardContent>\n        </Card>;\n    }\n}\nexport default withStyles(styles)(withTheme(Abfallkalender));\n"],"names":["styles","Abfallkalender","props","field","data","onDataChange","newData","id","view","views","selectedWidgets","widgetId","attr","wastetype","instancename","renderIcon","instance","retwastetype","state","trashcolor","trashcolorfactor","fontfamily","fontsize","whatsapplogo","dateformat","blink","blinkinterval","showdate","showdays","element","trashColorOuter","child","colors","factor","color0","color1","color2","newColor","options","blinking","timing","animation","selwastetype","status","getJsonObject","wastetypes","i","filtered","whatsappUsed","blinkUsed","ret","instances","rows","newinstances","key","error","strinstances","menuitems","event","item","fontCheck","fontAvailable","font","wasteTypes","allWasteTypes","k","strwastetypes","arr","str","arrelement","index"],"sourceRoot":""}