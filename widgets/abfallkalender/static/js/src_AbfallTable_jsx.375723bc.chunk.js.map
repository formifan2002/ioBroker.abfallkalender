{"version":3,"file":"static/js/src_AbfallTable_jsx.375723bc.chunk.js","mappings":"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","sources":["AbfallTable.jsx","Utils.jsx","translations-i18next.js"],"sourcesContent":["import React from 'react';\nimport i18next from 'i18next';\nimport { i18n as I18n } from '@iobroker/adapter-react-v5';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport { withStyles,withTheme } from '@mui/styles';\nimport { VisRxWidget } from '@iobroker/vis-2-widgets-react-dev';\nimport translations from './translations-i18next';\nimport Utils,{ arr2string,changeData,getInstances } from './Utils';\n\nconst styles = () => ({\n    root: {\n        flex: 1,\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        width: '100%',\n        overflow: 'hidden',\n    },\n});\n\nclass AbfallTable extends (window.visRxWidget || VisRxWidget) {\n    constructor(props) {\n        super(props);\n        this.arr2string = arr2string.bind(this);\n        this.changeData = changeData.bind(this);\n        this.getInstances = getInstances.bind(this);\n        this.initial = true;\n        this.instancenameLocal = this.state.data.instancename;\n        this.dayformatLocal = this.state.data.dayformat;\n        this.oidChange = false;\n        this.wasteCalendar = [];\n        this.refTable = React.createRef();\n        this.refTableBody = React.createRef();\n        this.refTableHeader = React.createRef();\n    }\n\n    static getWidgetInfo() {\n        // more details for custom filters in file:\n        // vis-2-beta/static/js/Attributes/Widget/WidgetField.jsx (line 424ff)\n        //\n        // new fields are not added to existing widgets !!!\n        return {\n            id: 'tplAbfallTable',\n            visSet: 'abfallkalender',\n            visName: I18n.t('vis_2_widgets_abfallkalender_widgetname_table'), // Name of widget\n            visAttrs: [\n                {\n                    name: 'common', // group name\n                    label: 'vis_2_widgets_abfallkalender_common', // translated group label\n                    fields: [\n                        {\n                            name: 'instancename',\n                            label: 'vis_2_widgets_abfallkalender_instance',\n                            type: 'custom',\n                            hidden: 'data.instancenamehidden === \"true\"',\n                            component: (\n                                field,\n                                data,\n                                onDataChange,\n                            ) => Utils.showInstances(field,data,onDataChange),\n                        },\n                        {\n                            name: 'instancenamehidden',  // hide instance selection if only one instance exists\n                            type: 'text',\n                            hidden: true,\n                            default: 'false',\n                        },\n                        {\n                            name: 'selectinstances',     // hidden value of the select entries for instances\n                            label: 'selectinstances',\n                            type: 'text',\n                            hidden: true,\n                            default: '',\n                        },\n                        {\n                            name: 'dayformat',\n                            default: 'short',\n                            label: 'vis_2_widgets_abfallkalender_dayformat',\n                            type: 'select',\n                            options: [\n                                {\n                                    value: 'short',\n                                    label: 'vis_2_widgets_abfallkalender_dateformat_short',\n                                },\n                                {\n                                    value: 'long',\n                                    label: 'vis_2_widgets_abfallkalender_dateformat_long',\n                                },\n                            ],\n                        },\n                        {\n                            name: 'fontfamily',\n                            label: 'vis_2_widgets_abfallkalender_fontfamily',\n                            default: 'Arial',\n                            type: 'custom',\n                            hidden: 'data.showdate === false && data.showdays === false',\n                            component: (\n                                field,\n                                data,\n                                onDataChange,\n                            ) => Utils.showFontfamily(field,data,onDataChange,['fontsizeheader','fontsizebody','fontsizemonth']),\n                        },\n                        {\n                            name: 'showheader',\n                            default: true,\n                            label: 'vis_2_widgets_abfallkalender_showheader',\n                            type: 'custom',\n                            component: (\n                                field,\n                                data,\n                                onDataChange,\n                            ) => Utils.showCheckbox(field,data,onDataChange),\n                        },\n                        {\n                            name: 'fontsizeheader',\n                            default: 12,\n                            label: 'vis_2_widgets_abfallkalender_fontsize_header',\n                            type: 'slider',\n                            hidden: 'data.showheader === false',\n                            min: 6,\n                            max: 24,\n                            step: 1,\n                        },\n                        {\n                            name: 'fontsizemonth',\n                            default: 10,\n                            label: 'vis_2_widgets_abfallkalender_fontsize_month',\n                            type: 'slider',\n                            min: 6,\n                            max: 24,\n                            step: 1,\n                        },\n                        {\n                            name: 'fontsizebody',\n                            default: 10,\n                            label: 'vis_2_widgets_abfallkalender_fontsize_body',\n                            type: 'slider',\n                            min: 6,\n                            max: 24,\n                            step: 1,\n                        },\n                        {\n                            name: 'oid',     // name in data structure\n                            label: 'vis_2_widgets_abfallkalender_oid',\n                            type: 'id',\n                            noInit: true,\n                            hidden: true,\n                        },\n                    ],\n                },\n                // check here all possible types https://github.com/ioBroker/ioBroker.vis/blob/react/src/src/Attributes/Widget/SCHEMA.md\n            ],\n            visPrev: 'widgets/abfallkalender/img/table.png',\n        };\n    }\n\n    // eslint-disable-next-line class-methods-use-this\n    async propertiesUpdate() {\n        // Widget has 3 important states\n        // 1. this.state.values - contains all state values, that are used in widget (automatically collected from widget info).\n        //                        So you can use `this.state.values[this.state.rxData.oid + '.val']` to get value of state with id this.state.rxData.oid\n        // 2. this.state.rxData - contains all widget data with replaced bindings. E.g. if this.state.data.type is `{system.adapter.admin.0.alive}`,\n        //                        then this.state.rxData.type will have state value of `system.adapter.admin.0.alive`\n        // 3. this.state.rxStyle - contains all widget styles with replaced bindings. E.g. if this.state.styles.width is `{javascript.0.width}px`,\n        //                        then this.state.rxData.type will have state value of `javascript.0.width` + 'px\n        if (this.initial === true && this.oidChange !== true) {\n            return;\n        }\n        const { dayformat,instancename } = this.state.data;\n        if ((typeof instancename !== 'undefined' && this.instancenameLocal !== instancename) || this.oidChange === true || this.dayformatLocal !== dayformat) {\n            this.instancenameLocal = instancename;\n            this.dayformatLocal = dayformat;\n            await this.getWasteCalendar(instancename);\n            if (this.oidChange === true) { this.oidChange = false; }\n        }\n    }\n\n    componentDidMount() {\n        super.componentDidMount();\n        // Update data\n        i18next.init(translations)\n            .then(() => {\n                i18next.changeLanguage(this.props.systemConfig.common.language);\n            });\n        this.getInstances()\n            .then(instance => {\n                this.getWasteCalendar(instance)\n                    .then(() => {\n                        this.changeTableSize()\n                            .then(() => {\n                                this.initial = false;\n                            });\n                    });\n            });\n    }\n\n    // Do not delete this method. It is used by vis to read the widget configuration.\n    // eslint-disable-next-line class-methods-use-this\n    getWidgetInfo() {\n        return AbfallTable.getWidgetInfo();\n    }\n\n    // This function is called every time when rxData is changed\n    onRxDataChanged() {\n        this.propertiesUpdate();\n    }\n\n    // This function is called every time when rxStyle is changed\n    // eslint-disable-next-line class-methods-use-this\n    onRxStyleChanged() {\n        this.changeTableSize();\n    }\n\n    async changeTableSize() {\n        const height = this.refService.current.clientHeight;\n        if (height !== 0) {\n            const headerHeight = this.state.data.showheader === false ? 0 : parseInt(this.refTableHeader.current.offsetHeight);\n            const newTableHeight = `${(height - 2).toString()}px`;\n            const newHeight = `${(height - headerHeight - 10).toString()}px`;\n            this.refTable.current.style.height = newTableHeight;\n            this.refTableBody.current.style.height = newHeight;\n        }\n        const width = this.refService.current.clientWidth;\n        if (width !== 0) {\n            const newWidth = `${(width - 2).toString()}px`;\n            this.refTable.current.style.width = newWidth;\n            this.refTableBody.current.style.width = newWidth;\n            this.refTableHeader.current.style.width = newWidth;\n        }\n    }\n\n    // This function is called every time when some Object State updated, but all changes lands into this.state.values too\n    // eslint-disable-next-line class-methods-use-this, no-unused-vars\n    onStateUpdated(id,state) {\n        // state of the object 'WasteCalendar' has changed\n        this.oidChange = true;\n        this.propertiesUpdate();\n    }\n\n    async getCalendarObject(instance) {\n        const id = `abfallkalender.${instance}.WasteCalendar`;\n        const calendar = await this.props.socket.getForeignStates(id)\n            .then(status => {\n                if (!(id in status) || typeof status[id].val === 'undefined') { return {}; }\n                this.changeData({ oid: id });\n                return JSON.parse(status[id].val);\n            });\n        return calendar;\n    }\n\n    async getWasteCalendar(instance) {\n        let monatsName = '';\n        let tag = '';\n        this.wasteCalendar = [];\n        const tempWasteCalendar = [];\n        const calendarObject = await this.getCalendarObject(instance);\n        if (typeof calendarObject === 'undefined' || Object.entries(calendarObject).length === 0) return;\n        // eslint-disable-next-line array-callback-return\n        Object.entries(calendarObject).map(calendarEntry => {\n            if (monatsName !== calendarEntry[1].Monatsname) {\n                tempWasteCalendar.push({\n                    col1span: 3,\n                    col2span: 0,\n                    col3span: 0,\n                    col1: `${calendarEntry[1].Monatsname} ${calendarEntry[1].Jahr}`,\n                    col2: '',\n                    col3: '',\n                });\n                monatsName = calendarEntry[1].Monatsname;\n            }\n            if (tag !== calendarEntry[1].Abfuhrdatum) {\n                tempWasteCalendar.push({\n                    col1span: 1,\n                    col2span: 1,\n                    col3span: 1,\n                    col1: `${this.state.data.dayformat === 'short' ? `${calendarEntry[1].AbfuhrTagKurz}.` : calendarEntry[1].AbfuhrTagLang}`,\n                    col2: `${calendarEntry[1].Tag}.`,\n                    col3: calendarEntry[1].Abfuhrart,\n                });\n                tag = calendarEntry[1].Abfuhrdatum;\n            } else {\n                tempWasteCalendar.push({\n                    col1span: 2,\n                    col2span: 0,\n                    col3span: 1,\n                    col1: '',\n                    col2: '',\n                    col3: calendarEntry[1].Abfuhrart,\n                });\n            }\n        });\n        this.wasteCalendar = [...tempWasteCalendar];\n    }\n\n    renderWidgetBody(props) {\n        super.renderWidgetBody(props);\n        return <div ref={this.refTable} style={{ overflow: 'auto' }}>\n            {this.state.data.showheader === true && <Table>\n                <TableHead ref={this.refTableHeader}>\n                    <TableRow>\n                        <TableCell sx={{ fontSize: this.state.data.fontsizeheader,fontFamily: this.state.data.fontfamily  }} colSpan={3} align=\"left\">\n                            <b>{i18next.t('vis_2_widgets_abfallkalender_widgetname_table')}</b>\n                        </TableCell>\n                    </TableRow>\n                </TableHead>\n            </Table>}\n            <div ref={this.refTableBody} style={{ overflow: 'auto',height: '200px',width: '100%' }}>\n                <Table size=\"small\">\n                    <TableBody>\n                        {this.wasteCalendar.map((item,index) => (\n                            <TableRow key={index}>\n                                {item.col1span > 0 && (\n                                    <TableCell sx={{ fontSize: item.col1span === 3 ? this.state.data.fontsizemonth : this.state.data.fontsizebody,fontFamily: this.state.data.fontfamily }} colSpan={item.col1span} align=\"left\">\n                                        {item.col1}\n                                    </TableCell>\n                                )}\n                                {item.col2span > 0 && (\n                                    <TableCell sx={{ fontSize: this.state.data.fontsizebody,fontFamily: this.state.data.fontfamily }} colSpan={item.col2span} align=\"left\">\n                                        {item.col2}\n                                    </TableCell>\n                                )}\n                                {item.col3span > 0 && (\n                                    <TableCell sx={{ fontSize: this.state.data.fontsizebody,fontFamily: this.state.data.fontfamily }} colSpan={item.col3span} align=\"left\">\n                                        {item.col3}\n                                    </TableCell>\n                                )}\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </div>\n        </div>;\n    }\n}\nexport default withStyles(styles)(withTheme(AbfallTable));\n","import React from 'react';\nimport i18next from 'i18next';\nimport Checkbox from '@mui/material/Checkbox';\nimport FormControl from '@mui/material/FormControl';\nimport Input from '@mui/material/Input';\nimport MenuItem from '@mui/material/MenuItem';\nimport Select from '@mui/material/Select';\n\nclass Utils {\n    static showFontfamily(field,data,onDataChange,checkAttributes) {\n        const fontCheck = new Set([\n            // Windows 10\n            'Arial','Arial Black','Bahnschrift','Calibri','Cambria','Cambria Math','Candara','Comic Sans MS','Consolas','Constantia','Corbel','Courier New','Ebrima','Franklin Gothic Medium','Gabriola','Gadugi','Georgia','HoloLens MDL2 Assets','Impact','Ink Free','Javanese Text','Leelawadee UI','Lucida Console','Lucida Sans Unicode','Malgun Gothic','Marlett','Microsoft Himalaya','Microsoft JhengHei','Microsoft New Tai Lue','Microsoft PhagsPa','Microsoft Sans Serif','Microsoft Tai Le','Microsoft YaHei','Microsoft Yi Baiti','MingLiU-ExtB','Mongolian Baiti','MS Gothic','MV Boli','Myanmar Text','Nirmala UI','Palatino Linotype','Segoe MDL2 Assets','Segoe Print','Segoe Script','Segoe UI','Segoe UI Historic','Segoe UI Emoji','Segoe UI Symbol','SimSun','Sitka','Sylfaen','Symbol','Tahoma','Times New Roman','Trebuchet MS','Verdana','Webdings','Wingdings','Yu Gothic',\n            // macOS\n            'American Typewriter','Andale Mono','Arial','Arial Black','Arial Narrow','Arial Rounded MT Bold','Arial Unicode MS','Avenir','Avenir Next','Avenir Next Condensed','Baskerville','Big Caslon','Bodoni 72','Bodoni 72 Oldstyle','Bodoni 72 Smallcaps','Bradley Hand','Brush Script MT','Chalkboard','Chalkboard SE','Chalkduster','Charter','Cochin','Comic Sans MS','Copperplate','Courier','Courier New','Didot','DIN Alternate','DIN Condensed','Futura','Geneva','Georgia','Gill Sans','Helvetica','Helvetica Neue','Herculanum','Hoefler Text','Impact','Lucida Grande','Luminari','Marker Felt','Menlo','Microsoft Sans Serif','Monaco','Noteworthy','Optima','Palatino','Papyrus','Phosphate','Rockwell','Savoye LET','SignPainter','Skia','Snell Roundhand','Tahoma','Times','Times New Roman','Trattatello','Trebuchet MS','Verdana','Zapfino',\n        ].sort());\n        document.fonts.ready;\n        const fontAvailable = new Set();\n        for (const font of fontCheck.values()) {\n            try {\n                let add = true;\n                for (let i = 0; i < checkAttributes.length; i++) {\n                    add = document.fonts.check(`${data[checkAttributes[i]]}px \"${font}\"`);\n                    if (add === false) { break; }\n                }\n                if (add === true) {\n                    fontAvailable.add(font);\n                }\n            } catch (err) {\n                console.error(`Error while checking font: ${font}.`);\n                console.log(err);\n            }\n        }\n        const menuitems = [];\n        for (const font of fontAvailable) {\n            menuitems.push({ title: font,value: font });\n        }\n        return <FormControl>\n            <Select\n                value={data[field.name]}\n                onChange={event => {\n                    onDataChange({ [field.name]: event.target.value });\n                }}\n                input={<Input name=\"fontfamily\" />}\n                label={i18next.t('vis_2_widgets_abfallkalender_fontfamily')}\n                style={{ fontSize: '12.8px' }}\n            >\n                {menuitems.map(item => (\n                    <MenuItem key={item.value} value={item.value} style={{ fontSize: '16px' }}>\n                        {item.title}\n                    </MenuItem>\n                ))}\n            </Select>\n        </FormControl>;\n    }\n\n    static showCheckbox(field,data,onDataChange) {\n        return <FormControl>\n            <Checkbox\n                checked={data[field.name]}\n                onChange={event => {\n                    onDataChange({ [field.name]: event.target.checked });\n                }}\n                color=\"primary\"\n            />\n        </FormControl>;\n    }\n\n    static showInstances(field,data,onDataChange) {\n        const menuitems = (('selectinstances' in data) && data.selectinstances !== '') ? data.selectinstances.replaceAll('[','{').replaceAll(']','}').replaceAll('#','\"').split('}')\n            .slice(0,-1) : [];\n        for (let i = 0; i < menuitems.length; i++) {\n            menuitems[i] += '}';\n            menuitems[i] = JSON.parse(menuitems[i].replaceAll(/'/g,'\"'));\n        }\n        return data.selectinstances === '' ? <div></div> : <FormControl>\n            <Select\n                value={data[field.name]}\n                onChange={event => {\n                    onDataChange({ [field.name]: event.target.value });\n                }}\n                input={<Input name=\"instances\" />}\n                label={i18next.t('vis_2_widgets_abfallkalender_instance')}\n                style={{ fontSize: '12.8px' }}\n            >\n                {menuitems.map(item => (\n                    <MenuItem key={item.value} value={item.value} style={{ fontSize: '16px' }}>\n                        {item.title}\n                    </MenuItem>\n                ))}\n            </Select>\n        </FormControl>;\n    }\n}\n\nexport async function arr2string(arr) {\n    let str = '';\n    // eslint-disable-next-line array-callback-return\n    arr.map(arrelement => {\n        str += '[';\n        Object.keys(arrelement)\n            .forEach((attr,index) => {\n                if (index > 0) str += ',';\n                str += `#${attr}#: #${arrelement[attr].toString()}#`;\n            });\n        str += ']';\n    });\n    return str;\n}\n\nexport function changeData(newData) {\n    const { id,view,views,selectedWidgets } = this.props;\n    const changeWidgets = selectedWidgets !== null ? selectedWidgets : [id];\n    changeWidgets.forEach(widgetId => {\n        Object.keys(newData)\n            .forEach(attr => {\n                views[view].widgets[widgetId].data[attr] = newData[attr];\n                this.state.data[attr] = newData[attr];\n                this.state.rxData[attr] = newData[attr];\n            });\n    });\n}\n\nexport async function getInstances() {\n    const instance = await this.props.socket.getObjectViewSystem('instance','system.adapter.abfallkalender.','system.adapter.abfallkalender.\\u9999')\n        .then(rows => {\n            const newinstances = [];\n            Object.keys(rows).forEach((key,i) => {\n                if (rows[key].native.key !== '') {\n                    let url;\n                    try {\n                        url = new URL(rows[key].native.url).hostname.replace('www.','');\n                        newinstances.push({ value: i,title: `${url} (${rows[key]._id.replace('system.adapter.abfallkalender.','')})` });\n                    } catch {\n                        url = '';\n                    }\n                }\n            });\n            return newinstances;\n        })\n        .then(async newinstances => {\n            if (this.state.editMode === true) {\n                await this.arr2string(newinstances)\n                    .then(strinstances => {\n                        this.changeData({ selectinstances: strinstances });\n                    });\n                this.changeData({ instancenamehidden: newinstances.length < 2 ? 'true' : 'false' });\n            }\n            let ret = this.state.data.instancename;\n            if (this.initial === true && (!('instancename' in this.state.data) || this.state.data.instancename === '')) {\n                ret = newinstances.length > 0  ? newinstances[0].value : '';\n                this.changeData({ instancename: ret });\n            }\n            this.instancenameLocal = ret;\n            return ret;\n        })\n        .catch(error => {\n            console.log('ERROR !!!:');\n            console.log(error);\n            return '';\n        });\n    return instance;\n}\n\nexport default Utils;\n","const translations = {\n    resources: {\n        de: { translation: require('./i18n/de.json') },\n        en: { translation: require('./i18n/en.json') },\n        es: { translation: require('./i18n/es.json') },\n        fr: { translation: require('./i18n/fr.json') },\n        it: { translation: require('./i18n/it.json') },\n        nl: { translation: require('./i18n/nl.json') },\n        pl: { translation: require('./i18n/pl.json') },\n        pt: { translation: require('./i18n/pt.json') },\n        ru: { translation: require('./i18n/ru.json') },\n        uk: { translation: require('./i18n/uk.json') },\n        'zh-cn': { translation: require('./i18n/zh-cn.json') },\n    },\n};\n\nexport default translations;\n"],"names":["styles","AbfallTable","props","field","data","onDataChange","dayformat","instancename","instance","height","headerHeight","newTableHeight","newHeight","width","newWidth","id","state","status","monatsName","tag","tempWasteCalendar","calendarObject","calendarEntry","item","index","Utils","checkAttributes","fontCheck","fontAvailable","font","add","i","err","menuitems","event","arr2string","arr","str","arrelement","attr","changeData","newData","view","views","selectedWidgets","widgetId","getInstances","rows","newinstances","key","url","strinstances","ret","error","translations"],"sourceRoot":""}